{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///Users/jagjitsingh/Desktop/company-projects/GoGether/mcp/client/app/api/chat/ai-tools.js"],"sourcesContent":["import { experimental_createMCPClient } from 'ai'\n\nexport default async function getTools() {\n  const mcpClient = await experimental_createMCPClient({\n    transport: {\n      type: 'sse',\n      url: 'http://localhost:8081/sse',\n    },\n    name: 'Demo',\n    version: '1.0.0',\n    onUncaughtError: (error) => {\n      console.error('Error in MCP Client:', error)\n    },\n  })\n  const tools = await mcpClient.tools()\n  return tools\n}\n"],"names":[],"mappings":";;;AAAA;;AAEe,eAAe;IAC5B,MAAM,YAAY,MAAM,CAAA,GAAA,sJAAA,CAAA,+BAA4B,AAAD,EAAE;QACnD,WAAW;YACT,MAAM;YACN,KAAK;QACP;QACA,MAAM;QACN,SAAS;QACT,iBAAiB,CAAC;YAChB,QAAQ,KAAK,CAAC,wBAAwB;QACxC;IACF;IACA,MAAM,QAAQ,MAAM,UAAU,KAAK;IACnC,OAAO;AACT","debugId":null}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file:///Users/jagjitsingh/Desktop/company-projects/GoGether/mcp/client/app/api/chat/route.js"],"sourcesContent":["import { xai } from '@ai-sdk/xai'\nimport { streamText } from 'ai'\nimport getTools from './ai-tools'\n\nconst SYSTEM_PROMPT = `[Identity]\nYou are VenoScan, an expert AI diagnostic assistant specialized in detecting and quantifying the likelihood of varicose veins from patient leg images.\n\n[Style]\n• Maintain a calm, professional, and reassuring medical tone.  \n• Use precise, concise language.  \n• Avoid any unnecessary commentary or medical jargon beyond what’s required for clarity.\n\n[Input]\n• A single high‑resolution image of the patient’s leg (front and/or side view).\n\n[Response Guidelines]\n• Immediately after analyzing the image, output **only** a single percentage score from **0%** to **100%** indicating the probability of varicose veins.  \n• Do include any additional text, explanations not more than 5 lines.  \n• Round to the nearest whole number.\n\n[Task]\n1. Examine the provided leg image for visual markers of varicose veins (e.g., bulging veins, discoloration, texture changes).  \n2. Calculate the overall probability that the patient has varicose veins based on those markers.  \n3. Provide **only** the probability as a percentage (e.g., “73%”).\n\n[Note]\nRaise error if the image is not clear or if the leg is not visible.\n\n[Example]\nProbability: 73%\n\n`\n\nexport const maxDuration = 30\n\nexport async function POST(req) {\n  let { messages } = await req.json()\n  messages = messages\n    .filter((msg) => msg.content.trim() !== '' && !msg.content.startsWith('Sorry, I encountered an error'))\n    .map((msg) => ({\n      role: msg.role,\n      content: msg.content.trim(),\n    }))\n\n  try {\n    const tools = await getTools()\n    const result = streamText({\n      model: xai('grok-2'),\n      messages,\n      system: SYSTEM_PROMPT,\n      maxSteps: 20,\n      tools,\n    })\n    return result.toDataStreamResponse()\n  } catch (error) {\n    console.error('Error in genAIResponse:', error)\n    if (error instanceof Error && error.message.includes('rate limit')) {\n      return { error: 'Rate limit exceeded. Please try again in a moment.' }\n    }\n    return {\n      error: error instanceof Error ? error.message : 'Failed to get AI response',\n    }\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEA,MAAM,gBAAgB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BvB,CAAC;AAEM,MAAM,cAAc;AAEpB,eAAe,KAAK,GAAG;IAC5B,IAAI,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,IAAI;IACjC,WAAW,SACR,MAAM,CAAC,CAAC,MAAQ,IAAI,OAAO,CAAC,IAAI,OAAO,MAAM,CAAC,IAAI,OAAO,CAAC,UAAU,CAAC,kCACrE,GAAG,CAAC,CAAC,MAAQ,CAAC;YACb,MAAM,IAAI,IAAI;YACd,SAAS,IAAI,OAAO,CAAC,IAAI;QAC3B,CAAC;IAEH,IAAI;QACF,MAAM,QAAQ,MAAM,CAAA,GAAA,mIAAA,CAAA,UAAQ,AAAD;QAC3B,MAAM,SAAS,CAAA,GAAA,sJAAA,CAAA,aAAU,AAAD,EAAE;YACxB,OAAO,CAAA,GAAA,sJAAA,CAAA,MAAG,AAAD,EAAE;YACX;YACA,QAAQ;YACR,UAAU;YACV;QACF;QACA,OAAO,OAAO,oBAAoB;IACpC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,IAAI,iBAAiB,SAAS,MAAM,OAAO,CAAC,QAAQ,CAAC,eAAe;YAClE,OAAO;gBAAE,OAAO;YAAqD;QACvE;QACA,OAAO;YACL,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAClD;IACF;AACF","debugId":null}}]
}